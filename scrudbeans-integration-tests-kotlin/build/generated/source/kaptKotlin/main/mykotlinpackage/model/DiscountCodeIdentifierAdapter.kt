// -------------------- DO NOT EDIT -------------------
//  This file is automatically generated by scrudbeans,
//  see https://manosbatsis.github.io/scrudbeans
//  To edit this file, copy it to the appropriate package 
//  in your src/main/kotlin folder and edit there. 
// ----------------------------------------------------
package mykotlinpackage.model

import com.github.manosbatsis.scrudbeans.api.`annotation`.IdentifierAdapterBean
import com.github.manosbatsis.scrudbeans.api.mdd.model.IdentifierAdapter
import java.lang.Class
import java.lang.IllegalArgumentException
import kotlin.Any
import kotlin.Boolean
import kotlin.Long
import kotlin.String
import org.springframework.context.`annotation`.Lazy
import org.springframework.core.convert.ConversionService
import org.springframework.stereotype.Component

@Component
@IdentifierAdapterBean(className = "mykotlinpackage.model.DiscountCode")
public class DiscountCodeIdentifierAdapter(
  @Lazy
  private val conversionService: ConversionService,
) : IdentifierAdapter<DiscountCode, Long> {
  public override val entityType: Class<DiscountCode> = DiscountCode::class.java

  public override val entityIdType: Class<Long> = Long::class.java

  public override val isCompositeId: Boolean = false

  public override fun getId(resource: Any?): Long? {
    if(resource == null) return null
    if(resource !is DiscountCode) throw
        IllegalArgumentException("""Incompatible type ${resource::class.java.canonicalName} should be DiscountCode""")
    val noNullMsg =
        "Property find entity for string representation of kotlin.Long or one of it' components"
    return resource.id
  }

  public override fun getIdAsString(resource: Any?): String? = convertIdToString(getId(resource))

  public override fun buildIdFromString(from: String?): Long? {
    if(from == null) return null
    return conversionService.convert(from, Long::class.java)
  }

  public override fun convertIdToString(resourceId: Long?): String? {
    if(resourceId == null) return null
    return conversionService.convert(resourceId, String::class.java)
  }

  public companion object {
    public val incompleteIdMsg: String =
        "Cannot build string representation from incomplete kotlin.Long"
  }
}
