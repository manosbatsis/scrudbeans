<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.github.manosbatsis.scrudbeans</groupId>
    <artifactId>scrudbeans</artifactId>
    <version>0.32-SNAPSHOT</version><!--scrudbeans -->
    <packaging>pom</packaging>
    <inceptionYear>2016</inceptionYear>
    <name>scrudbeans</name>
    <url>https://manosbatsis.github.io/scrudbeans</url>
    <description>Model-driven apps for Spring Boot</description>
    <developers>
        <developer>
            <name>Manos Batsis</name>
            <timezone>GMT+2</timezone>
            <email>manosbatsis@gmail.com</email>
			<url>https://manosbatsis.github.io</url>
		</developer>
	</developers>
	<distributionManagement>
		<snapshotRepository>
			<id>ossrh</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots</url>
		</snapshotRepository>
	</distributionManagement>

	<repositories>
		<repository>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jcenter-releases</id>
			<name>jcenter</name>
			<url>http://jcenter.bintray.com</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>jcenter</id>
			<name>JCenter</name>
			<url>https://jcenter.bintray.com/</url>
		</pluginRepository>
	</pluginRepositories>
	<licenses>
		<license>
			<name>GNU LESSER GENERAL PUBLIC LICENSE Version 3</name>
			<url>https://www.gnu.org/licenses/lgpl-3.0.txt</url>
		</license>
	</licenses>
	<scm>
		<connection>scm:git:git@github.com:manosbatsis/scrudbeans.git</connection>
		<url>scm:git:git@github.com:manosbatsis/scrudbeans.git</url>
		<developerConnection>scm:git:git@github.com:manosbatsis/scrudbeans.git</developerConnection>
	</scm>
	<properties>
		<it.skip>false</it.skip>
		<spring-boot.exclude-devtools>false</spring-boot.exclude-devtools>
		<java.version>11</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<kotlin.version>1.6.21</kotlin.version>
		<dokka.version>1.6.20</dokka.version>
		<kotlin.compiler.jvmTarget>${java.version}</kotlin.compiler.jvmTarget>
		<kotlin.apiVersion>1.6</kotlin.apiVersion>
		<kotlin.languageVersion>1.6</kotlin.languageVersion>

		<!-- plugins -->
		<maven-compiler-plugin.version>3.10.1</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>2.8.2</maven-deploy-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M3</maven-failsafe-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M3</maven-surefire-plugin.version>
		<nexus-staging-maven-plugin.version>1.6.8</nexus-staging-maven-plugin.version>
		<!-- libs -->
		<kotlinpoet.version>1.11.0</kotlinpoet.version>
		<kotlin-utils.version>0.32</kotlin-utils.version>
		<rsql-jpa-spring-boot-starter.version>5.0.19</rsql-jpa-spring-boot-starter.version>
		<evo-inflector.version>1.3</evo-inflector.version>
		<junit.version>5.6.2</junit.version>

		<jackson.version>2.13.2</jackson.version>

		<mapstruct.version>1.4.2.Final</mapstruct.version>
		<javapoet.version>1.11.1</javapoet.version>
		<lombok.version>1.18.4</lombok.version>

		<commons-lang3.version>3.5</commons-lang3.version>
		<commons-beanutils.version>1.9.4</commons-beanutils.version>
		<commons-fileupload.version>1.3.3</commons-fileupload.version>
		<commons-io.version>2.4</commons-io.version>
		<commons-collections4.version>4.1</commons-collections4.version>
		<!-- versions
		<hibernate-core.version>5.3.9.Final</hibernate-core.version>
		<imgscalr-lib.version>4.2</imgscalr-lib.version>
		<pdfbox.version>2.0.15</pdfbox.version>
		<jodconverter-local.version>4.2.2</jodconverter-local.version>
		<jaxb.api.version>2.3.0</jaxb.api.version>
        <junit.version>5.6.2</junit.version>
        -->
        <!-- javers auditing
        <javers-spring-boot-starter-sql.version>5.0.0</javers-spring-boot-starter-sql.version>
        <jackson-module-json-interceptor.version>1.0.0</jackson-module-json-interceptor.version>

        <rest-assured.version>3.1.1</rest-assured.version>
		<spring.version>5.2.9.RELEASE</spring.version>
		<thin.version>1.0.11.RELEASE</thin.version>
 -->
        <spring-boot.version>2.6.7</spring-boot.version>
    </properties>

	<modules>
		<module>scrudbeans-annotation-processor-kotlin</module>
		<module>scrudbeans-api</module>
		<module>scrudbeans-common</module>
		<!--
		<module>scrudbeans-annotation-processor-java</module>
		<module>scrudbeans-common</module>
		<module>scrudbeans-error</module>
		<module>scrudbeans-hypermedia</module>
		<module>scrudbeans-integration-tests-java</module>
		-->
		<module>scrudbeans-integration-tests-kotlin</module>
		<module>scrudbeans-jpa</module>
		<module>scrudbeans-spring-boot-autoconfigure</module>
		<module>scrudbeans-spring-boot-starter</module>
		<module>scrudbeans-spring-boot-starter-test</module>
		<!--
		-->
	</modules>

	<dependencyManagement>
		<dependencies>
            <dependency>
                <groupId>org.springdoc</groupId>
                <artifactId>springdoc-openapi-ui</artifactId>
                <version>1.2.33</version>
            </dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>2.1.1</version>
			</dependency>
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson</groupId>
				<artifactId>jackson-bom</artifactId>
				<version>${jackson.version}</version>
				<scope>import</scope>
				<type>pom</type>
			</dependency>
			<!-- commons -->
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-beanutils</groupId>
				<artifactId>commons-beanutils</artifactId>
				<version>${commons-beanutils.version}</version>
				<exclusions>
					<exclusion>
						<groupId>commons-collections</groupId>
						<artifactId>commons-collections-testframework</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>commons-fileupload</groupId>
				<artifactId>commons-fileupload</artifactId>
				<version>${commons-fileupload.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons-io.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-collections4</artifactId>
				<version>${commons-collections4.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-codec</groupId>
				<artifactId>commons-codec</artifactId>
				<version>1.10</version>
			</dependency>
			<!-- misc
			-->
			<dependency>
				<groupId>com.github.manosbatsis.kotlin-utils</groupId>
				<artifactId>kotlin-utils-api</artifactId>
				<version>${kotlin-utils.version}</version>
			</dependency>
			<!--
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>${hibernate-core.version}</version>
			</dependency>
			<dependency>
				<groupId>org.imgscalr</groupId>
				<artifactId>imgscalr-lib</artifactId>
				<version>${imgscalr-lib.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.pdfbox</groupId>
				<artifactId>pdfbox-tools</artifactId>
				<version>${pdfbox.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jodconverter</groupId>
				<artifactId>jodconverter-local</artifactId>
				<version>${jodconverter-local.version}</version>
			</dependency>
			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-s3</artifactId>
				<version>1.11.537</version>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.javers</groupId>
				<artifactId>javers-spring-boot-starter-sql</artifactId>
				<version>${javers-spring-boot-starter-sql.version}</version>
			</dependency>
			<dependency>
				<groupId>net.jodah</groupId>
				<artifactId>typetools</artifactId>
				<version>0.5.0</version>

			</dependency>
			-->
			<!-- javax APIs

			<dependency>
				<groupId>javax.websocket</groupId>
				<artifactId>javax.websocket-api</artifactId>
				<version>1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.1.0</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>2.0.1.Final</version>
			</dependency>
			-->
			<dependency>
				<groupId>javax.persistence</groupId>
				<artifactId>javax.persistence-api</artifactId>
				<version>2.2</version>
			</dependency>
			<!--
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
			</dependency>
            <dependency>
                <groupId>io.rest-assured</groupId>
                <artifactId>rest-assured</artifactId>
                <version>${rest-assured.version}</version>
            </dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

            <dependency>
                <groupId>org.springframework.security</groupId>
                <artifactId>spring-security-config</artifactId>
                <version>5.2.1.RELEASE</version>
            </dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter</artifactId>
				<version>${spring-boot.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.hamcrest</groupId>
						<artifactId>hamcrest-core</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>
             -->

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-web</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-validation</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-autoconfigure</artifactId>
				<version>${spring-boot.version}</version>
			</dependency>
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<!-- Exclude JUnit 4 from starter-test (and all other related test-starter, i.e
					 those for security and project reactor -->
				<exclusions>
					<exclusion>
						<groupId>junit</groupId>
						<artifactId>junit</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- Mapstruct-->
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-jdk8</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct-processor</artifactId>
				<version>${mapstruct.version}</version>
			</dependency>

			<!-- Provide JUnit 5 API -->
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-api</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-params</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- Import dependency management from Spring Boot-->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring-boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<dependencies>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-stdlib-jdk8</artifactId>
			<version>${kotlin.version}</version>
		</dependency>
		<dependency>
			<groupId>org.jetbrains.kotlin</groupId>
			<artifactId>kotlin-test</artifactId>
			<version>${kotlin.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>2.7</version>
				</plugin>

				<plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>3.0.0</version>
                </plugin>
                <plugin>
                    <groupId>org.jetbrains.dokka</groupId>
                    <artifactId>dokka-maven-plugin</artifactId>
                    <version>${dokka.version}</version>
                    <configuration>
                        <apiVersion>${kotlin.apiVersion}</apiVersion>
                        <languageVersion>${kotlin.languageVersion}</languageVersion>
						<skip>true</skip>
                    </configuration>
                    <executions>
                        <execution>
                            <id>dokka</id>
                            <phase>pre-site</phase>
                            <goals>
                                <goal>dokka</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>javadocJar</id>
                            <phase>package</phase>
                            <goals>
                                <goal>javadocJar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${maven-surefire-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${maven-failsafe-plugin.version}</version>
					<configuration>
						<skipITs>${it.skip}</skipITs>
						<includes>
							<include>**/*IT.java</include>
						</includes>
					</configuration>
					<!--
					running UT and IT's:

					mvn clean verify

					running IT's but NOT UT's

					mvn clean verify -Dsurefire.skip=true

					running UT but not IT's:

					mvn clean verify -DskipITs=true
					-->
					<executions>
						<execution>
							<goals>
								<goal>integration-test</goal>
								<goal>verify</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
				</plugin>

				<plugin>
					<artifactId>kotlin-maven-plugin</artifactId>
					<groupId>org.jetbrains.kotlin</groupId>
					<version>${kotlin.version}</version>
					<configuration>
						<args>
							<arg>-Xjsr305=strict</arg>
						</args>
						<javaParameters>true</javaParameters>
						<compilerPlugins>
							<plugin>spring</plugin>
						</compilerPlugins>
						<apiVersion>${kotlin.apiVersion}</apiVersion>
						<languageVersion>${kotlin.languageVersion}</languageVersion>
						<jvmTarget>${kotlin.compiler.jvmTarget}</jvmTarget>
					</configuration>
					<dependencies>
						<dependency>
							<groupId>org.jetbrains.kotlin</groupId>
							<artifactId>kotlin-maven-allopen</artifactId>
							<version>${kotlin.version}</version>
						</dependency>
					</dependencies>
					<executions>
						<execution>
							<id>compile</id>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<source>src/main/kotlin</source>
									<source>src/main/resources</source>
								</sourceDirs>
							</configuration>
						</execution>
						<execution>
							<id>test-compile</id>
							<phase>test-compile</phase>
							<goals>
								<goal>test-compile</goal>
							</goals>
							<configuration>
								<sourceDirs>
									<source>src/test/kotlin</source>
									<source>src/test/resources</source>
								</sourceDirs>
							</configuration>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.jetbrains.kotlin</groupId>
				<artifactId>kotlin-maven-plugin</artifactId>
			</plugin>
		</plugins>

	</build>

	<profiles>
		<profile>
			<id>deploy</id>
			<build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>versions-maven-plugin</artifactId>
                        <version>2.7</version>
                    </plugin>

                    <!-- disable default maven deployment... -->
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-deploy-plugin</artifactId>
                        <version>${maven-deploy-plugin.version}</version>
                        <configuration>
                            <skip>true</skip>
                        </configuration>
                    </plugin>
					<!-- ... replace with nexus staging -->
					<plugin>
						<groupId>org.sonatype.plugins</groupId>
						<artifactId>nexus-staging-maven-plugin</artifactId>
						<version>1.6.7</version>
						<extensions>true</extensions>
						<configuration>
							<serverId>ossrh</serverId>
							<nexusUrl>https://oss.sonatype.org/</nexusUrl>
							<autoReleaseAfterClose>true</autoReleaseAfterClose>
						</configuration>
					</plugin>
					<!-- sign artifacts -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-source-plugin</artifactId>
						<version>2.2.1</version>
						<executions>
							<execution>
								<id>attach-sources</id>
								<goals>
									<goal>jar-no-fork</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<version>2.9.1</version>
						<configuration>
							<additionalparam>-Xdoclint:none</additionalparam>
						</configuration>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
