name: CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        java-version:
          - 11
        os:
          - ubuntu-latest
      #    - windows-2019
      # in case one combination fails, we still want to see results from others
      fail-fast: false
    runs-on: ${{ matrix.os }}
    timeout-minutes: 30
    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: ${{ matrix.java-version }}
          distribution: 'zulu'

      - uses: gradle/gradle-build-action@v2
        name: Build with Gradle
        with:
          arguments: build

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v2
        if: ${{ matrix.java-version == '8' && matrix.os == 'ubuntu-latest' }}
        with:
          token: ${{secrets.CODECOV_TOKEN}}
          files: ./build/reports/kover/report.xml


      - name: Identify current version
        id: current_version
        uses: christian-draeger/read-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'release_version'

      - name: Temporarily set snapshot version
        if: ${{ github.event_name == 'push' && matrix.os == 'ubuntu-latest' }}
        uses: christian-draeger/write-properties@1.0.1
        with:
          path: './gradle.properties'
          property: 'release_version'
          value: ${{steps.current_version.outputs.value}}-SNAPSHOT

      - uses: gradle/gradle-build-action@v2
        name: Publish snapshot to Maven Central
        if: ${{ github.event_name == 'push' && matrix.os == 'ubuntu-latest' }}
        env:
          ORG_GRADLE_PROJECT_signingKey: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGKEY}}
          ORG_GRADLE_PROJECT_signingKeyId: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGKEYID}}
          ORG_GRADLE_PROJECT_signingPassword: ${{secrets.ORG_GRADLE_PROJECT_SIGNINGPASSWORD}}
          ORG_GRADLE_PROJECT_sonatypeUsername: ${{secrets.ORG_GRADLE_PROJECT_SONATYPEUSERNAME}}
          ORG_GRADLE_PROJECT_sonatypePassword: ${{secrets.ORG_GRADLE_PROJECT_SONATYPEPASSWORD}}
        with:
          arguments: publishToSonatype
